print = global.print
assert = global.assert

print('-- can: basics --')

// Basic flow and binary ops checks
i = 1000000
while (i--) { }
assert(i == -1, "i-- should decrement")

// Arrays
a = keysof { a: 1, b: 2, c: 3 }
i = 0
while (i < sizeof a) {
  assert(a[i] == 'a' || a[i] == 'b' || a[i] == 'c', "keysof")
  i++
}

a = [1,2,3]
assert(a[-1] === nil, "negative index")
a[-1] = 1
assert(a[-1] === nil, "negative index#2")

// Objects
a = { x: 1 , y: 1 }
assert(a.x == 1, "key lookup")
assert(a.y != 2, "key lookup#2")
assert(a.z === nil, "unexisting key lookup")

a.z = 2
assert(a.z == 2, "key lookup#3")

assert(1 + ":" + 0 == "1:0", "concat")

// Functions
fn(a, b, c) {
  assert(a === 1, "first stack argument")
  assert(b === 2, "second context argument")
  assert(c === nil, "third argument")
  assert(d === nil, "non-initialized stack value")

  return () {
    return b
  }
}

fn(1, 2)
